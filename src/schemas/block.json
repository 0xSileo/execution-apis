{
	"Block": {
		"title": "Block object",
		"type": "object",
		"required": [
			"parentHash",
			"sha3Uncles",
			"miner",
			"stateRoot",
			"transactionsRoot",
			"receiptsRoot",
			"logsBloom",
			"totalDifficulty",
			"number",
			"gasLimit",
			"gasUsed",
			"timestamp",
			"extraData",
			"mixHash",
			"nonce",
			"size",
			"transactions",
			"uncles"
		],
		"properties": {
			"parentHash": {
				"title": "Parent block hash",
				"$ref": "#/components/schemas/hash32"
			},
			"sha3Uncles": {
				"title": "Ommers hash",
				"$ref": "#/components/schemas/hash32"
			},
			"miner": {
				"title": "Coinbase",
				"$ref": "#/components/schemas/address"
			},
			"stateRoot": {
				"title": "State root",
				"$ref": "#/components/schemas/hash32"
			},
			"transactionsRoot": {
				"title": "Transactions root",
				"$ref": "#/components/schemas/hash32"
			},
			"receiptsRoot": {
				"title": "Receipts root",
				"$ref": "#/components/schemas/hash32"
			},
			"logsBloom": {
				"title": "Bloom filter",
				"$ref": "#/components/schemas/bytes256"
			},
			"difficulty": {
				"title": "Difficulty",
				"$ref": "#/components/schemas/bytes"
			},
			"number": {
				"title": "Number",
				"$ref": "#/components/schemas/uint"
			},
			"gasLimit": {
				"title": "Gas limit",
				"$ref": "#/components/schemas/uint"
			},
			"gasUsed": {
				"title": "Gas used",
				"$ref": "#/components/schemas/uint"
			},
			"timestamp": {
				"title": "Timestamp",
				"$ref": "#/components/schemas/uint"
			},
			"extraData": {
				"title": "Extra data",
				"$ref": "#/components/schemas/bytes"
			},
			"mixHash": {
				"title": "Mix hash",
				"$ref": "#/components/schemas/hash32"
			},
			"nonce": {
				"title": "Nonce",
				"$ref": "#/components/schemas/bytes"
			},
			"totalDifficulty": {
				"title": "Total difficult",
				"$ref": "#/components/schemas/uint"
			},
			"baseFeePerGas": {
				"title": "Base fee per gas",
				"$ref": "#/components/schemas/uint"
			},
			"size": {
				"title": "Block size",
				"$ref": "#/components/schemas/uint"
			},
			"transactions": {
				"oneOf": [
					{
						"title": "Transaction hashes",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/hash32"
						}
					},
					{
						"title": "Full transactions",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TransactionSigned"
						}
					}
				]
			},
			"uncles": {
				"title": "Uncles",
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/hash32"
				}
			}
		}
	},
	"BlockTag": {
		"title": "Block tag",
		"type": "string",
		"enum": ["earliest", "finalized", "safe", "unsafe", "pending", "latest"],
		"description": "`latest`: **DEPRECATED** Currently an alias for `unsafe`, will be removed at some point in the future; `earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `unsafe`: The most recent block in the canonical chain observed by the client, this block can be re-orged out of the canonical chain; `pending`: A sample next block built by the client on top of `unsafe` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying over `finalized` or `safe` block MUST be responded with `-31100: Unknown block` error"
	},
	"BlockNumberOrTag": {
		"title": "Block number or tag",
		"oneOf": [
			{
				"title": "Block number",
				"$ref": "#/components/schemas/uint"
			},
			{
				"title": "Block tag",
				"$ref": "#/components/schemas/BlockTag"
			}
		]
	}
}
